#!/usr/bin/env python



#   tool_collision_planning_scene
#
#   Created on: April 29, 2015
#   Authors:   Francisco Vina
#             fevb <at> kth.se
#

#  Copyright (c) 2015, Francisco Vina, CVAP, KTH
#    All rights reserved.

#    Redistribution and use in source and binary forms, with or without
#    modification, are permitted provided that the following conditions are met:
#       * Redistributions of source code must retain the above copyright
#         notice, this list of conditions and the following disclaimer.
#       * Redistributions in binary form must reproduce the above copyright
#         notice, this list of conditions and the following disclaimer in the
#         documentation and/or other materials provided with the distribution.
#       * Neither the name of KTH nor the
#         names of its contributors may be used to endorse or promote products
#         derived from this software without specific prior written permission.

#    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
#    ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
#    WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
#    DISCLAIMED. IN NO EVENT SHALL KTH BE LIABLE FOR ANY
#    DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
#    (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#    ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


import rospy
from moveit_commander import PlanningSceneInterface
import shape_msgs.msg
import moveit_msgs.msg
from tf import TransformListener
import tf
from tf_conversions import posemath
from geometry_msgs.msg import Pose, PoseStamped
import rospkg
import sys
import numpy as np
import PyKDL as kdl
import copy

if __name__=='__main__':
    rospy.init_node('tool_collision_planning_scene')

    rospy.loginfo('[tool_collision_planning_scene]: Waiting for Moveit to load')
    rospy.wait_for_service('/move_group/ompl/set_parameters')

    #rospy.sleep(20.0)



    planning_scene = PlanningSceneInterface()
    rospy.sleep(10.0)
    tool_size = rospy.get_param('/tool_size', [0.16, 0.02, 0.04])

    tool_pose = kdl.Frame(kdl.Rotation.Identity(), kdl.Vector(tool_size[0], tool_size[1], tool_size[2]))
    tool_pose.p[0] = tool_pose.p[0]*0.5
    tool_pose.p[1] = tool_pose.p[1]*0.5+0.016
    tool_pose.p[2] = 0.0

    tool_pose = posemath.toMsg(tool_pose)



    l_tool_pose_stamped = PoseStamped()
    l_tool_pose_stamped.pose = copy.deepcopy(tool_pose)
    l_tool_pose_stamped.pose.position.y = tool_pose.position.y*-1
    l_tool_pose_stamped.header.frame_id = 'l_gripper_l_finger_tip_link'
    l_tool_pose_stamped.header.stamp = rospy.Time.now()
    l_touch_links = ['l_gripper_l_finger_tip_link', 'l_gripper_r_finger_tip_link', 'l_gripper_l_finger_link', 'l_gripper_r_finger_link', 'r_tool']
    planning_scene.attach_box('l_gripper_l_finger_tip_link', 'l_tool', l_tool_pose_stamped, tool_size, l_touch_links)


    r_tool_pose_stamped = PoseStamped()
    r_tool_pose_stamped.pose = copy.deepcopy(tool_pose)
    r_tool_pose_stamped.header.frame_id = 'l_gripper_r_finger_tip_link'
    r_tool_pose_stamped.header.stamp = rospy.Time.now()
    r_touch_links = ['l_gripper_l_finger_tip_link', 'l_gripper_r_finger_tip_link', 'l_gripper_l_finger_link', 'l_gripper_r_finger_link',  'l_tool']
    planning_scene.attach_box('l_gripper_r_finger_tip_link', 'r_tool', r_tool_pose_stamped, tool_size, r_touch_links)

